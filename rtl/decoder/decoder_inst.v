// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.


// Generated by Quartus Prime Version 20.1 (Build Build 711 06/05/2020)
// Created on Sat Dec 16 09:32:17 2023

decoder decoder_inst
(
	.E_D(E_D_sig) ,	// input  E_D_sig
	.E_C(E_C_sig) ,	// input  E_C_sig
	.E_B(E_B_sig) ,	// input  E_B_sig
	.E_A(E_A_sig) ,	// input  E_A_sig
	.SEG_A(SEG_A_sig) ,	// output  SEG_A_sig
	.SEG_A_N(SEG_A_N_sig) ,	// output  SEG_A_N_sig
	.SEG_B(SEG_B_sig) ,	// output  SEG_B_sig
	.SEG_B_N(SEG_B_N_sig) ,	// output  SEG_B_N_sig
	.SEG_C(SEG_C_sig) ,	// output  SEG_C_sig
	.SEG_C_N(SEG_C_N_sig) ,	// output  SEG_C_N_sig
	.SEG_D(SEG_D_sig) ,	// output  SEG_D_sig
	.SEG_D_N(SEG_D_N_sig) ,	// output  SEG_D_N_sig
	.SEG_E(SEG_E_sig) ,	// output  SEG_E_sig
	.SEG_E_N(SEG_E_N_sig) ,	// output  SEG_E_N_sig
	.SEG_F(SEG_F_sig) ,	// output  SEG_F_sig
	.SEG_F_N(SEG_F_N_sig) ,	// output  SEG_F_N_sig
	.SEG_G(SEG_G_sig) ,	// output  SEG_G_sig
	.SEG_G_N(SEG_G_N_sig) 	// output  SEG_G_N_sig
);

